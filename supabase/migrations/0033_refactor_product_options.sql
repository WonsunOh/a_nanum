-- 1. 기존 옵션 관련 테이블들을 삭제합니다. (데이터가 있다면 백업 후 진행하세요)
DROP TABLE IF EXISTS public.product_option_items;
DROP TABLE IF EXISTS public.product_options;

-- 2. 옵션 그룹 테이블 ('색상', '사이즈' 등)을 다시 생성합니다.
CREATE TABLE public.product_option_groups (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id BIGINT NOT NULL REFERENCES public.products(id) ON DELETE CASCADE,
    name TEXT NOT NULL -- 예: '색상', '사이즈'
);

-- 3. 옵션 값 테이블 ('레드', 'S' 등)을 생성합니다.
CREATE TABLE public.product_option_values (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    option_group_id BIGINT NOT NULL REFERENCES public.product_option_groups(id) ON DELETE CASCADE,
    value TEXT NOT NULL -- 예: '레드', 'S'
);

-- 4. 최종 조합(Variant) 테이블 ('레드-S' 등)을 생성합니다.
-- 이 테이블에 실제 가격과 재고가 저장됩니다.
CREATE TABLE public.product_variants (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id BIGINT NOT NULL REFERENCES public.products(id) ON DELETE CASCADE,
    name TEXT NOT NULL, -- 예: '레드 / S'
    additional_price INT NOT NULL DEFAULT 0,
    stock_quantity INT NOT NULL DEFAULT 0,
    UNIQUE(product_id, name) -- 한 상품 내에서 같은 조합 이름이 중복되지 않도록 설정
);

-- RLS 정책을 새로 설정합니다. (기존 정책은 테이블 삭제 시 함께 사라졌습니다)
ALTER TABLE public.product_option_groups ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.product_option_values ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.product_variants ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Allow public read access" ON public.product_option_groups FOR SELECT USING (true);
CREATE POLICY "Allow public read access" ON public.product_option_values FOR SELECT USING (true);
CREATE POLICY "Allow public read access" ON public.product_variants FOR SELECT USING (true);

CREATE POLICY "Allow admin manage access" ON public.product_option_groups FOR ALL USING (true);
CREATE POLICY "Allow admin manage access" ON public.product_option_values FOR ALL USING (true);
CREATE POLICY "Allow admin manage access" ON public.product_variants FOR ALL USING (true);